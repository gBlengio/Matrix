#include "p16F887.inc"   ; TODO INSERT CONFIG CODE HERE USING CONFIG BITS GENERATOR
 	__CONFIG	_CONFIG1,	_INTRC_OSC_NOCLKOUT & _WDT_OFF & _PWRTE_OFF & _MCLRE_ON & _CP_OFF & _CPD_OFF & _BOR_OFF & _IESO_ON & _FCMEN_ON & _LVP_OFF 
 	__CONFIG	_CONFIG2,	_BOR40V & _WRT_OFF

RES_VECT  CODE    0x0000            ; processor reset vector
    GOTO    START                   ; go to beginning of program

MAIN_PROG CODE                      ; let linker place main program
i equ 0x30
j equ 0x31
k equ 0x32
aux equ 0x33
x equ 0x34
y equ 0x35
z equ 0x36
l equ 0x37

    START
    BANKSEL PORTA ;
    CLRF PORTA ;Init PORTA
    BANKSEL ANSEL ;
    CLRF ANSEL ;digital I/O
    CLRF ANSELH
    BANKSEL TRISA ;
    CLRF TRISA
    CLRF TRISB
    CLRF TRISC
    CLRF TRISD
    CLRF TRISE
    BCF STATUS,RP1
    BCF STATUS,RP0
    CLRF PORTA
    CLRF PORTB
    CLRF PORTC
    CLRF PORTD
    CLRF PORTE
    
    Inicio
    call delay1
    CLRF PORTD
    CLRF PORTB
    call delay
    call delay2
    CLRF PORTD
    CLRF PORTB 
    call delay
  
    call delay3
    CLRF PORTD
    CLRF PORTB
    call delay


    goto Inicio
 
      
    FuncG
    call c1g
    call demora
    call c2g
    call demora
    call c3g
    call demora
    call c4g
    call demora
    call c5g
    call demora 
    call c6g
    call demora
    call c7g
    call demora
    return
    c1g
    MOVLW   b'00000000'                          
    MOVWF   PORTD  
    MOVLW   b'00000000'                          
    MOVWF   PORTB  
    return
    c2g
    MOVLW   b'01000000'                          
    MOVWF   PORTD  
    MOVLW   b'11111111'                          
    MOVWF   PORTB  
    return
    c3g
    MOVLW   b'00100000'                          
    MOVWF   PORTD  
    MOVLW   b'10000001'                          
    MOVWF   PORTB  
    return
    c4g
    MOVLW   b'00010000'                          
    MOVWF   PORTD  
    MOVLW   b'10110101'                          
    MOVWF   PORTB 
    return
    c5g
    MOVLW   b'00001000'                          
    MOVWF   PORTD  
    MOVLW   b'10110101'                         
    MOVWF   PORTB 
    return
    c6g
    MOVLW   b'00000100'                          
    MOVWF   PORTD  
    MOVLW   b'10110001'                           
    MOVWF   PORTB 
    return
    c7g
    MOVLW   b'00000010'                          
    MOVWF   PORTD  
    MOVLW   b'11111111'                           
    MOVWF   PORTB 
    return

    FuncB
    call c1b
    call demora
    call c2b
    call demora
    call c3b
    call demora
    call c4b
    call demora
    call c5b
    call demora 
    call c6b
    call demora
    call c7b
    call demora
    return
    c1b
    MOVLW   b'00000000'                          
    MOVWF   PORTD  
    MOVLW   b'00000000'                          
    MOVWF   PORTB  
    return
    c2b
    MOVLW   b'01000000'                          
    MOVWF   PORTD  
    MOVLW   b'11111111'                          
    MOVWF   PORTB  
    return
    c3b
    MOVLW   b'00100000'                          
    MOVWF   PORTD  
    MOVLW   b'10000001'                          
    MOVWF   PORTB  
    return
    c4b
    MOVLW   b'00010000'                          
    MOVWF   PORTD  
    MOVLW   b'10110101'                          
    MOVWF   PORTB 
    return
    c5b
    MOVLW   b'00001000'                          
    MOVWF   PORTD  
    MOVLW   b'10110101'                          
    MOVWF   PORTB 
    return
    c6b
    MOVLW   b'00000100'                          
    MOVWF   PORTD  
    MOVLW   b'11001001'                          
    MOVWF   PORTB 
    return
    c7b
    MOVLW   b'00000010'                          
    MOVWF   PORTD  
    MOVLW   b'11111111'                          
    MOVWF   PORTB 
    return

    
    FuncL
    call c1l
    call demora
    call c2l
    call demora
    call c3l
    call demora
    call c4l
    call demora
    call c5l
    call demora 
    call c6l
    call demora
    call c7l
    call demora
    return
    c1l
    MOVLW   b'00000000'                          
    MOVWF   PORTD  
    MOVLW   b'00000000'                          
    MOVWF   PORTB  
    return
    CLRF PORTD                
    CLRF PORTB
    return
    c2l
    MOVLW   b'00000000'                          
    MOVWF   PORTD  
    MOVLW   b'00000000'                          
    MOVWF   PORTB  
    return
    c3l
    MOVLW   b'00100000'                          
    MOVWF   PORTD  
    MOVLW   b'10000001'                          
    MOVWF   PORTB  
    return
    c4l
    MOVLW   b'00010000'                          
    MOVWF   PORTD  
    MOVLW   b'11111101'                          
    MOVWF   PORTB 
    return
    c5l
    MOVLW   b'00001000'                          
    MOVWF   PORTD  
    MOVLW   b'11111101'                          
    MOVWF   PORTB 
    return
    c6l
    MOVLW   b'00000100'                          
    MOVWF   PORTD  
    MOVLW   b'11111101'                          
    MOVWF   PORTB 
    return
    c7l
    MOVLW   b'00000000'                          
    MOVWF   PORTD  
    MOVLW   b'00000000'                          
    MOVWF   PORTB 
    return    
    
    demora
    MOVLW d'5'
    MOVWF i
loopj:    
    MOVLW d'5'
    MOVWF j
loopk:    
    MOVLW d'5'
    nop
    MOVWF k
    DECFSZ k
    GOTO $-1
    DECFSZ j
    GOTO loopk
    DECFSZ i
    GOTO loopj
    RETURN
    
    
delay:
    MOVLW d'30' 
    MOVWF x
loopy:    
    MOVLW d'54'
    MOVWF y
loopz:    
    MOVLW d'50'
    MOVWF z 
    DECFSZ z
    GOTO $-1
    DECFSZ y
    GOTO loopz
    DECFSZ x
    GOTO loopy
    return
    
delay1:
    MOVLW d'10' 
    MOVWF x
loop1:    
    MOVLW d'10'
    MOVWF y
loop2:    
    MOVLW d'0'
    MOVWF z 
    DECFSZ z 
    GOTO $-1
    call FuncG
    DECFSZ y
    GOTO loop2
    DECFSZ x
    GOTO loop1
    return   
    
delay2:
    MOVLW d'10' 
    MOVWF x
loop3:    
    MOVLW d'10'
    MOVWF y

loop4:    
    MOVLW d'0'
    MOVWF z 
    DECFSZ z 
    GOTO $-1
    call FuncB
    DECFSZ y
    GOTO loop4
    DECFSZ x
    GOTO loop3
    return   

delay3:
    MOVLW d'10' 
    MOVWF x
loop5:    
    MOVLW d'10'
    MOVWF y
loop6:    
    MOVLW d'0'
    MOVWF z 
    DECFSZ z 
    GOTO $-1
    call FuncL
    DECFSZ y
    GOTO loop6
    DECFSZ x
    GOTO loop5
    return   
    
    
END
